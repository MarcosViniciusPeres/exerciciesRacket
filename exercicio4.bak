#lang racket
(require examples)

;; Defina uma funcao que receba uma lista e retorne uma lista inversa.
;; ListaDeNumero -> ListaDeNumero

(examples
 (check-equal? (inverteLista (empty)) empty)
 (check-equal? (inverteLista (cons 1 (cons 2 (cons 3 empty)))) (cons 3 (cons 2 (cons 1 empty))))
 )

;; Modelo para lista
;;(define (fn-para-ldn ldn)
;;  (cond
;;    [(empty? ldn) ...]
;;    [else ... (first ldn)
;;          ... (fn-para-ldn (rest ldn)) ... ]))


(define (inverteLista lst)
  (cond
    [(empty? lst) empty]
    [else (cons rest lst (inverteLista (first lst)))]))
        